---
// src/pages/recycle.astro
import Layout from "../layouts/Layout.astro";
---

<Layout title="Registrar Reciclaje - EcoRecicla">
    <div class="max-w-4xl mx-auto">
        <!-- Header -->
        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <h1 class="text-3xl font-bold text-gray-800 mb-2">
                Registrar Reciclaje
            </h1>
            <p class="text-gray-600">
                Registra los materiales que has reciclado para ganar dinero o
                puntos
            </p>
        </div>

        <!-- Formulario de Reciclaje -->
        <div class="grid md:grid-cols-2 gap-8">
            <div class="bg-white rounded-lg shadow-md p-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">
                    Nuevo Registro
                </h2>

                <form id="recycleForm" class="space-y-4">
                    <div>
                        <label
                            for="materialType"
                            class="block text-sm font-medium text-gray-700 mb-2"
                        >
                            Tipo de Material
                        </label>
                        <select
                            id="materialType"
                            name="materialType"
                            required
                            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                        >
                            <option value="">Selecciona un material</option>
                            <optgroup label="üí∞ Materiales que generan dinero">
                                <option value="METAL"
                                    >üîß Metales (Aluminio, Fierro) - $100/kg</option
                                >
                                <option value="COPPER"
                                    >üî∂ Cobre - $150/kg</option
                                >
                            </optgroup>
                            <optgroup label="üéÅ Materiales que generan puntos">
                                <option value="PLASTIC"
                                    >‚ôªÔ∏è Pl√°stico - 5 pts/kg</option
                                >
                                <option value="PAPER"
                                    >üìÑ Papel y Cart√≥n - 3 pts/kg</option
                                >
                                <option value="GLASS"
                                    >ü•É Vidrio - 4 pts/kg</option
                                >
                                <option value="ORGANIC"
                                    >üå± Residuos Org√°nicos - 2 pts/kg</option
                                >
                                <option value="TEXTILE"
                                    >üëï Ropa y Textiles - 6 pts/kg</option
                                >
                                <option value="WOOL">üêë Lana - 8 pts/kg</option>
                                <option value="MATTRESS"
                                    >üõèÔ∏è Colchones - 50 pts/unidad</option
                                >
                            </optgroup>
                        </select>
                    </div>

                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label
                                for="quantity"
                                class="block text-sm font-medium text-gray-700 mb-2"
                            >
                                Cantidad
                            </label>
                            <input
                                type="number"
                                id="quantity"
                                name="quantity"
                                min="0.1"
                                step="0.1"
                                required
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                                placeholder="0.0"
                            />
                        </div>

                        <div>
                            <label
                                for="unit"
                                class="block text-sm font-medium text-gray-700 mb-2"
                            >
                                Unidad
                            </label>
                            <select
                                id="unit"
                                name="unit"
                                class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
                            >
                                <option value="kg">Kilogramos (kg)</option>
                                <option value="unit">Unidades</option>
                            </select>
                        </div>
                    </div>

                    <!-- Preview de ganancia -->
                    <div
                        id="earningsPreview"
                        class="bg-gray-50 rounded-lg p-4 hidden"
                    >
                        <h3 class="font-medium text-gray-800 mb-2">
                            Vista Previa de Ganancia
                        </h3>
                        <div id="previewContent" class="text-sm text-gray-600">
                        </div>
                    </div>

                    <button
                        type="submit"
                        class="w-full bg-green-600 text-white py-3 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors font-medium"
                    >
                        Registrar Reciclaje
                    </button>
                </form>

                <div id="message" class="mt-4 text-center hidden"></div>
            </div>

            <!-- Informaci√≥n y estad√≠sticas -->
            <div class="space-y-6">
                <!-- Estad√≠sticas del usuario -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">
                        Mis Estad√≠sticas
                    </h3>
                    <div class="space-y-3">
                        <div class="flex justify-between items-center">
                            <span class="text-gray-600">üí∞ Dinero Total:</span>
                            <span class="font-semibold text-green-600"
                                >$<span id="userMoney">0</span></span
                            >
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-gray-600">üéÅ Puntos:</span>
                            <span class="font-semibold text-blue-600"
                                ><span id="userPoints">0</span>/1000</span
                            >
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-gray-600"
                                >‚ôªÔ∏è Total Reciclado:</span
                            >
                            <span class="font-semibold text-purple-600"
                                ><span id="userRecycled">0</span> kg</span
                            >
                        </div>
                    </div>
                </div>

                <!-- Tarifas de materiales -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">
                        Tarifas de Materiales
                    </h3>

                    <div class="mb-4">
                        <h4 class="font-medium text-green-700 mb-2">
                            üí∞ Materiales que generan dinero
                        </h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span>üîß Metales (Aluminio, Fierro)</span>
                                <span class="font-medium">$100/kg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>üî∂ Cobre</span>
                                <span class="font-medium">$150/kg</span>
                            </div>
                        </div>
                    </div>

                    <div>
                        <h4 class="font-medium text-blue-700 mb-2">
                            üéÅ Materiales que generan puntos
                        </h4>
                        <div class="space-y-2 text-sm">
                            <div class="flex justify-between">
                                <span>‚ôªÔ∏è Pl√°stico</span>
                                <span class="font-medium">5 pts/kg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>üìÑ Papel y Cart√≥n</span>
                                <span class="font-medium">3 pts/kg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>ü•É Vidrio</span>
                                <span class="font-medium">4 pts/kg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>üå± Residuos Org√°nicos</span>
                                <span class="font-medium">2 pts/kg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>üëï Ropa y Textiles</span>
                                <span class="font-medium">6 pts/kg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>üêë Lana</span>
                                <span class="font-medium">8 pts/kg</span>
                            </div>
                            <div class="flex justify-between">
                                <span>üõèÔ∏è Colchones</span>
                                <span class="font-medium">50 pts/unidad</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- √öltimos registros -->
                <div class="bg-white rounded-lg shadow-md p-6">
                    <h3 class="text-lg font-semibold text-gray-800 mb-4">
                        √öltimos Registros
                    </h3>
                    <div id="recentRecords" class="space-y-2">
                        <p class="text-gray-500 text-sm">
                            No hay registros recientes
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</Layout>

<script>
    // Verificar si el usuario est√° logueado
    const currentUser = JSON.parse(
        localStorage.getItem("currentUser") || "null",
    );

    if (!currentUser) {
        window.location.href = "/";
    } else {
        loadUserStats();
        loadRecentRecords();
    }

    // Configuraci√≥n de materiales
    const MATERIAL_CONFIG = {
        METAL: { rate: 100, type: "money", unit: "kg" },
        COPPER: { rate: 150, type: "money", unit: "kg" },
        PLASTIC: { rate: 5, type: "points", unit: "kg" },
        PAPER: { rate: 3, type: "points", unit: "kg" },
        GLASS: { rate: 4, type: "points", unit: "kg" },
        ORGANIC: { rate: 2, type: "points", unit: "kg" },
        TEXTILE: { rate: 6, type: "points", unit: "kg" },
        WOOL: { rate: 8, type: "points", unit: "kg" },
        MATTRESS: { rate: 50, type: "points", unit: "unit" },
    };

    async function loadUserStats() {
        try {
            const response = await fetch("/api/login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ email: currentUser.email }),
            });

            if (response.ok) {
                const result = await response.json();
                const user = result.user;

                document.getElementById("userMoney").textContent =
                    user.money || 0;
                document.getElementById("userPoints").textContent =
                    user.points || 0;

                // Actualizar localStorage
                localStorage.setItem("currentUser", JSON.stringify(user));
            }
        } catch (error) {
            console.error("Error loading user stats:", error);
        }
    }

    async function loadRecentRecords() {
        try {
            const response = await fetch(
                `/api/history?userId=${currentUser.id}`,
            );
            if (response.ok) {
                const result = await response.json();
                const records = result.records || [];

                displayRecentRecords(records.slice(-3).reverse());

                // Calcular total reciclado
                const totalKg = records
                    .filter((r) => r.unit === "kg")
                    .reduce((sum, r) => sum + r.quantity, 0);
                document.getElementById("userRecycled").textContent =
                    totalKg.toFixed(1);
            }
        } catch (error) {
            console.error("Error loading recent records:", error);
        }
    }

    function displayRecentRecords(records) {
        const container = document.getElementById("recentRecords");

        if (records.length === 0) {
            container.innerHTML =
                '<p class="text-gray-500 text-sm">No hay registros recientes</p>';
            return;
        }

        const recordsHTML = records
            .map((record) => {
                const date = new Date(record.date).toLocaleDateString("es-CL");
                const material = getMaterialInfo(record.materialType);

                return `
        <div class="flex justify-between items-center text-sm">
          <div class="flex items-center space-x-2">
            <span>${material.icon}</span>
            <span class="text-gray-600">${record.quantity} ${record.unit === "kg" ? "kg" : "u"}</span>
          </div>
          <span class="font-medium ${record.type === "money" ? "text-green-600" : "text-blue-600"}">
            ${record.type === "money" ? "+$" + record.earned : "+" + record.earned + "pts"}
          </span>
        </div>
      `;
            })
            .join("");

        container.innerHTML = recordsHTML;
    }

    function getMaterialInfo(materialType) {
        const materials = {
            METAL: { icon: "üîß" },
            COPPER: { icon: "üî∂" },
            PLASTIC: { icon: "‚ôªÔ∏è" },
            PAPER: { icon: "üìÑ" },
            GLASS: { icon: "ü•É" },
            ORGANIC: { icon: "üå±" },
            TEXTILE: { icon: "üëï" },
            MATTRESS: { icon: "üõèÔ∏è" },
            WOOL: { icon: "üêë" },
        };

        return materials[materialType] || { icon: "üì¶" };
    }

    // Actualizar unidad seg√∫n el material seleccionado
    document
        .getElementById("materialType")
        .addEventListener("change", function (e) {
            const materialType = e.target.value;
            const unitSelect = document.getElementById("unit");

            if (materialType === "MATTRESS") {
                unitSelect.value = "unit";
                unitSelect.disabled = true;
            } else {
                unitSelect.disabled = false;
                unitSelect.value = "kg";
            }

            updateEarningsPreview();
        });

    // Actualizar preview cuando cambie la cantidad
    document
        .getElementById("quantity")
        .addEventListener("input", updateEarningsPreview);
    document
        .getElementById("unit")
        .addEventListener("change", updateEarningsPreview);

    function updateEarningsPreview() {
        const materialType = document.getElementById("materialType").value;
        const quantity =
            parseFloat(document.getElementById("quantity").value) || 0;
        const unit = document.getElementById("unit").value;

        const preview = document.getElementById("earningsPreview");
        const content = document.getElementById("previewContent");

        if (!materialType || quantity <= 0) {
            preview.classList.add("hidden");
            return;
        }

        const config = MATERIAL_CONFIG[materialType];
        if (!config) {
            preview.classList.add("hidden");
            return;
        }

        let earned = 0;
        if (unit === "unit") {
            earned = config.rate * quantity;
        } else {
            earned = Math.floor(config.rate * quantity);
        }

        const currentPoints =
            parseInt(document.getElementById("userPoints").textContent) || 0;

        if (config.type === "money") {
            content.innerHTML =
                '<p>Ganar√°s: <span class="font-semibold text-green-600">$' +
                earned +
                "</span></p>";
        } else {
            const finalPoints = Math.min(currentPoints + earned, 1000);
            const pointsToAdd = finalPoints - currentPoints;

            let html =
                '<p>Ganar√°s: <span class="font-semibold text-blue-600">' +
                pointsToAdd +
                " puntos</span></p>";
            html +=
                '<p class="text-xs text-gray-500">Puntos totales: ' +
                finalPoints +
                "/1000</p>";

            if (earned > pointsToAdd) {
                html +=
                    '<p class="text-xs text-orange-600">Has alcanzado el l√≠mite de 1000 puntos</p>';
            }

            content.innerHTML = html;
        }

        preview.classList.remove("hidden");
    }

    // Manejar env√≠o del formulario
    document
        .getElementById("recycleForm")
        .addEventListener("submit", async function (e) {
            e.preventDefault();

            const formData = new FormData(e.target);
            const data = {
                userId: currentUser.id,
                materialType: formData.get("materialType"),
                quantity: parseFloat(formData.get("quantity")),
                unit: formData.get("unit"),
            };

            // Validaciones
            if (!data.materialType) {
                showMessage("Selecciona un tipo de material", "error");
                return;
            }

            if (!data.quantity || data.quantity <= 0) {
                showMessage("Ingresa una cantidad v√°lida", "error");
                return;
            }

            try {
                const response = await fetch("/api/recycle", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json();

                if (response.ok) {
                    showMessage("Reciclaje registrado exitosamente", "success");

                    // Limpiar formulario
                    document.getElementById("recycleForm").reset();
                    document
                        .getElementById("earningsPreview")
                        .classList.add("hidden");

                    // Recargar estad√≠sticas
                    setTimeout(() => {
                        loadUserStats();
                        loadRecentRecords();
                    }, 1000);
                } else {
                    showMessage(
                        result.error || "Error al registrar reciclaje",
                        "error",
                    );
                }
            } catch (error) {
                showMessage("Error de conexi√≥n", "error");
            }
        });

    function showMessage(text, type) {
        const messageEl = document.getElementById("message");
        messageEl.textContent = text;
        messageEl.className = `mt-4 text-center p-3 rounded ${
            type === "success"
                ? "bg-green-100 text-green-800 border border-green-200"
                : "bg-red-100 text-red-800 border border-red-200"
        }`;
        messageEl.classList.remove("hidden");

        // Ocultar mensaje despu√©s de 5 segundos
        setTimeout(() => {
            messageEl.classList.add("hidden");
        }, 5000);
    }
</script>
